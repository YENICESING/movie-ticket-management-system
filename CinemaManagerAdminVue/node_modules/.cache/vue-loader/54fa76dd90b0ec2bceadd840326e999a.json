{"remainingRequest":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\whisper\\cinema\\CinemaManagerAdminVue\\src\\views\\role\\ResourceInfo.vue?vue&type=style&index=0&id=5bf651cb&scoped=true&lang=css","dependencies":[{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\src\\views\\role\\ResourceInfo.vue","mtime":1742018319234},{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOaTjeS9nOaMiemSrue7hOagt+W8jyAqLwouZWwtcm93IHsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgouZWwtYnV0dG9uIHsKICBmb250LXNpemU6IDE0cHg7CiAgcGFkZGluZzogMTBweCAyMHB4OwogIGJvcmRlci1yYWRpdXM6IDZweDsKICB0cmFuc2l0aW9uOiBhbGwgMC4yczsKfQoKLmVsLWJ1dHRvbi0tcHJpbWFyeSB7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzQwOWVmZiwgIzI5NzlmZik7CiAgYm9yZGVyOiBub25lOwp9CgouZWwtYnV0dG9uLS1kYW5nZXIgewogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICNmZjRkNGYsICNmNTIyMmQpOwogIGJvcmRlcjogbm9uZTsKfQovKiDmk43kvZzmjInpkq5ob3ZlcuaViOaenCAqLwouZWwtYnV0dG9uOm5vdCguaXMtZGlzYWJsZWQpOmhvdmVyIHsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7CiAgYm94LXNoYWRvdzogMCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7Cn0K"},{"version":3,"sources":["ResourceInfo.vue"],"names":[],"mappings":";AA0UA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ResourceInfo.vue","sourceRoot":"src/views/role","sourcesContent":["<!--数据获取方法\ngetResourceList：根据查询条件向服务器发送请求，获取资源列表数据，并更新页面显示。\ngetAllResource：向服务器请求获取所有资源列表，用于添加和修改资源时选择父资源。\n分页处理方法\nhandleSizeChange：当用户更改每页显示的记录数量时，更新查询条件中的 pageSize，并重新调用 getResourceList 方法获取数据。\nhandleCurrentChange：当用户切换页码时，更新查询条件中的 pageNum，并重新调用 getResourceList 方法获取数据。\n对话框操作方法\naddDialogClosed：在添加资源对话框关闭时，重置表单字段，清除之前输入的信息。\naddResource：处理添加资源的逻辑，包括表单验证、设置父资源 ID 为默认值（若未选择）、发送添加请求、更新资源列表和显示提示信息。\nshowEditDialog：根据资源 ID 获取资源详细信息，并显示修改资源对话框，回显资源信息，同时处理父资源 ID 为 0 的情况。\neditDialogClosed：在修改资源对话框关闭时，重置表单字段。\neditResource：处理修改资源信息的逻辑，包括表单验证、处理父资源 ID 为空的情况、发送更新请求、更新资源列表和显示提示信息。\n删除操作方法\nmultipleDelete：处理批量删除资源的逻辑，先弹出确认删除的提示框，若用户确认则发送删除请求，更新资源列表并显示提示信息。\ndeleteResourceById：处理单个资源删除的逻辑，先弹出确认删除的提示框，若用户确认则发送删除请求，更新资源列表并显示提示信息。\n辅助方法\nhandleSelectionChange：监听表格中多选框的选择变化，更新 multipleSelection 数组，用于批量删除操作。-->\n<template>\n  <div>\n    <!--面包屑导航区域-->\n    <div class=\"board\">\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item>权限管理</el-breadcrumb-item>\n        <el-breadcrumb-item>资源信息管理</el-breadcrumb-item>\n      </el-breadcrumb>\n    </div>\n\n\n    <!-- 卡片视图 -->\n    <el-card>\n      <el-row :gutter=\"24\">\n        <el-col :span=\"24\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\" style=\"font-size: 18px;\">\n             添加资源\n          </el-button>\n          <el-button type=\"danger\" @click=\"multipleDelete\" style=\"font-size: 18px;\">\n             批量删除\n          </el-button>\n        </el-col>\n      </el-row>\n\n      <el-table :data=\"resourceList\" border stripe @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"资源编号\" width=\"145\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"资源名称\"></el-table-column>\n        <el-table-column prop=\"path\" label=\"资源路径\"></el-table-column>\n        <el-table-column prop=\"level\" label=\"权限等级\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <el-tag type=\"danger\" v-if=\"scope.row.level === 1\">一级</el-tag>\n            <el-tag type=\"warning\" v-else-if=\"scope.row.level === 2\">二级</el-tag>\n            <el-tag v-else>三级</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"parent.name\" label=\"父资源名称\" width=\"180\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"260\" fixed=\"right\">\n          <template slot-scope=\"scope\">\n            <el-tooltip effect=\"dark\" style=\"font-size: 18px;\" content=\"修改资源信息\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n              <el-button type=\"primary\" @click=\"showEditDialog(scope.row.id)\">\n                 编辑\n              </el-button>\n            </el-tooltip>\n            <el-tooltip effect=\"dark\" content=\"删除资源\" placement=\"top\" style=\"font-size: 18px;\" :enterable=\"false\" :open-delay=\"500\">\n              <el-button type=\"danger\" @click=\"deleteResourceById(scope.row.id)\">\n                 删除\n              </el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!--分页区域-->\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"queryInfo.pageNum\"\n          :page-sizes=\"[5, 7, 9]\"\n          :page-size=\"queryInfo.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n      </el-pagination>\n\n    </el-card>\n\n    <!--添加资源对话框-->\n    <el-dialog title=\"添加资源\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\n      <!--内容主题区-->\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n        <!--prop：在addFormRules中定义校验规则， v-model：双向绑定数据-->\n\n        <el-form-item label=\"资源编号\" prop=\"id\">\n          <el-input v-model=\"addForm.id\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"资源名称\" prop=\"name\">\n          <el-input v-model=\"addForm.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"资源路径\" prop=\"path\">\n          <el-input v-model=\"addForm.path\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"父资源名称\" prop=\"parentId\">\n          <el-select v-model=\"addForm.parentId\" placeholder=\"请选择父资源\" clearable >\n            <el-option\n                v-for=\"item in allResources\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <!--底部区域-->\n      <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"addDialogVisible = false\" style=\"font-size: 18px;\">  取 消</el-button>\n      <el-button type=\"primary\" @click=\"addResource\" style=\"font-size: 18px;\">  确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!--修改影厅对话框-->\n    <el-dialog title=\"修改资源\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\n        <el-form-item label=\"资源编号\" prop=\"id\">\n          <el-input v-model=\"editForm.id\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"资源名称\" prop=\"name\">\n          <el-input v-model=\"editForm.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"资源路径\" prop=\"path\">\n          <el-input v-model=\"editForm.path\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"父资源名称\" prop=\"parentId\">\n          <el-select v-model=\"editForm.parentId\" placeholder=\"请选择父资源\" clearable >\n            <el-option\n                v-for=\"item in allResources\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\" style=\"font-size: 18px;\">  取 消</el-button>\n        <el-button type=\"primary\" @click=\"editResource\" style=\"font-size: 18px;\">  确 定</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ResourceInfo\",\n  data() {\n    return {\n      queryInfo: {\n        query: '',\n        pageNum: 1,\n        pageSize: 7\n      },\n      resourceList: [],\n      allResources: [],\n      total: 0,\n      addDialogVisible: false,\n      //添加资源的表单数据\n      addForm: {\n        name: '',\n        path: '',\n        level: 0,\n        parentId: null\n      },\n      //验证表单规则对象\n      addFormRules: {\n        name: [\n          { required: true, message: '请输入资源名', trigger: 'blur' }\n        ],\n        path: [\n          { required: true, message: '请输入资源路径', trigger: 'blur'}\n        ]\n      },\n      editDialogVisible: false,\n      editForm: {},\n      editFormRules: {\n        name: [\n          { required: true, message: '请输入资源名', trigger: 'blur' }\n        ],\n        path: [\n          { required: true, message: '请输入资源路径', trigger: 'blur'}\n        ]\n      },\n      multipleSelection: []\n    }\n  },\n  created() {\n    this.getResourceList()\n    this.getAllResource()\n  },\n  methods: {\n    async getResourceList(){\n      const {data : res} = await axios.get('sysResource', {params: this.queryInfo})\n      this.resourceList = res.data;\n      this.total = res.total\n      this.queryInfo.pageNum = res.pageNum\n      this.queryInfo.pageSize = res.pageSize\n    },\n    async getAllResource(){\n      const {data : res} = await axios.get('sysResource')\n      this.allResources = res.data;\n    },\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize\n      this.getResourceList()\n    },\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage\n      this.getResourceList()\n    },\n    // 监听添加对话框的关闭事件\n    addDialogClosed(){\n      this.$refs.addFormRef.resetFields()\n    },\n    // 监听添加按钮\n    addResource(){\n      const _this = this;\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        //预校验成功，发网络请求\n        if(_this.addForm.parentId === null) _this.addForm.parentId = 0\n\n        axios.defaults.headers.post['Content-Type'] = 'application/json'\n        const { data : res} = await axios.post('sysResource', JSON.stringify(_this.addForm))\n        if(res.code !== 200) return this.$message.error(res.msg)\n        //隐藏添加对话框\n        this.addDialogVisible = false\n        //重新加载列表\n        await this.getResourceList()\n        this.$message.success('添加资源信息成功！')\n      })\n    },\n    // 显示修改对话框，回显数据\n    async showEditDialog(id){\n      const _this = this\n      await axios.get('sysResource/' + id ).then(resp => {\n        console.log(resp)\n        _this.editForm = resp.data.data\n      })\n      if(this.editForm.parentId === 0) this.editForm.parentId = ''\n      this.editDialogVisible = true\n    },\n    // 监听修改对话框的关闭事件\n    editDialogClosed(){\n      this.$refs.editFormRef.resetFields()\n    },\n    // 修改影厅分类信息并提交\n    editResource(){\n      this.$refs.editFormRef.validate(async valid => {\n        const _this = this\n        if (!valid) return\n        console.log(this.editForm.parentId)\n        if(this.editForm.parentId === '') this.editForm.parentId = 0\n        console.log(this.editForm.parentId)\n        axios.defaults.headers.put['Content-Type'] = 'application/json'\n        const {data : res} = await axios.put('sysResource/', JSON.stringify(_this.editForm))\n        if(res.code !== 200) return this.$message.error(res.msg)\n\n        this.editDialogVisible = false\n        await this.getResourceList()\n        this.$message.success('修改资源信息成功！')\n      })\n    },\n    // 监听多选框变化\n    handleSelectionChange(val){\n      this.multipleSelection = val\n    },\n    async multipleDelete(){\n      const _this = this\n      //询问用户是否确认删除\n      const resp = await this.$confirm('此操作将永久删除这些条目, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      // 用户确认删除, resp为字符串\"confirm\"\n      // 用户取消删除，resp为字符串\"cancel\"\n      if (resp === 'cancel'){\n        return _this.$message.info('已取消删除')\n      }\n\n      let ids = []\n      this.multipleSelection.forEach(data => {\n        ids.push(data.id)\n      })\n      await axios.delete('sysResource/' + ids).then(resp => {\n        if (resp.data.code !== 200){\n          this.$message.success('批量删除资源信息失败！')\n        }\n      })\n      await this.getResourceList()\n      this.$message.success('批量删除资源信息成功！')\n    },\n    //根据id删除对应的资源信息\n    async deleteResourceById(id){\n      const _this = this\n      //询问用户是否确认删除\n      const resp = await this.$confirm('此操作将永久删除该条目, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      // 用户确认删除, resp为字符串\"confirm\"\n      // 用户取消删除，resp为字符串\"cancel\"\n      console.log(resp)\n      if (resp === 'cancel'){\n        return _this.$message.info('已取消删除')\n      }\n\n      await axios.delete('sysResource/' + id).then(resp => {\n        if (resp.data.code !== 200){\n          _this.$message.success('删除资源信息失败！')\n        }\n      })\n      await this.getResourceList()\n      this.$message.success('删除资源信息成功！')\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 操作按钮组样式 */\n.el-row {\n  margin-bottom: 20px;\n}\n\n.el-button {\n  font-size: 14px;\n  padding: 10px 20px;\n  border-radius: 6px;\n  transition: all 0.2s;\n}\n\n.el-button--primary {\n  background: linear-gradient(135deg, #409eff, #2979ff);\n  border: none;\n}\n\n.el-button--danger {\n  background: linear-gradient(135deg, #ff4d4f, #f5222d);\n  border: none;\n}\n/* 操作按钮hover效果 */\n.el-button:not(.is-disabled):hover {\n  transform: translateY(-1px);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);\n}\n</style>\n"]}]}
{"remainingRequest":"D:\\whisper\\cinema\\CinemaManagerUserVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\whisper\\cinema\\CinemaManagerUserVue\\src\\views\\movie\\Movie.vue?vue&type=style&index=0&id=2c292272&lang=css","dependencies":[{"path":"D:\\whisper\\cinema\\CinemaManagerUserVue\\src\\views\\movie\\Movie.vue","mtime":1742795421928},{"path":"D:\\whisper\\cinema\\CinemaManagerUserVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerUserVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerUserVue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerUserVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerUserVue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOenu+mZpOWuueWZqOmXtOi3nSAqLwouZWwtY29udGFpbmVyIHsKICBvdmVyZmxvdzogaGlkZGVuOwp9CgovKiDmtojpmaRoZWFkZXLlupXpg6jpl7Tot50gKi8KLmVsLWhlYWRlciB7CiAgcGFkZGluZzogMCAhaW1wb3J0YW50OwogIG1hcmdpbi1ib3R0b206IC0xcHg7IC8qIOa2iOmZpOm7mOiupOW6lemDqOi+ueahhumXtOmamSAqLwp9CgovKiDmtojpmaRtYWlu6aG26YOo6Ze06LedICovCi5lbC1tYWluIHsKICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7CiAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50Owp9Ci50YWdzLWNvbnRhaW5lciB7CiAgYmFja2dyb3VuZDogcmdiYSgzNywgMzcsIDM3LCAwLjYyKSAhaW1wb3J0YW50OwogIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKSAhaW1wb3J0YW50OwogIGJveC1zaGFkb3c6IDAgNHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjIpOwogIGJhY2tkcm9wLWZpbHRlcjogYmx1cig4cHgpOwogIG1hcmdpbjogMCAwOwp9CgoudGFncy1saW5lIHsKICBwYWRkaW5nOiAxOHB4IDI0cHg7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50Owp9CgoudGFncy10aXRsZSB7CiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDsKICBmbG9hdDogbm9uZSAhaW1wb3J0YW50OwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBtYXJnaW4tcmlnaHQ6IDMwcHg7Cn0KCi50YWdzLXRpdGxlIGkgewogIGNvbG9yOiAjMDBmZjg4OwogIG1hcmdpbi1yaWdodDogMTBweDsKfQoKLnRhZ3MtdGl0bGUgYiB7CiAgZm9udC1zaXplOiAxOHB4ICFpbXBvcnRhbnQ7CiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTsKfQoKLyog5qCH562+5qC35byPICovCi5lbC1yYWRpby1ncm91cCB7CiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDsKICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIGdhcDogMTJweDsKfQoKLmVsLXJhZGlvLWJ1dHRvbiB7CiAgbWFyZ2luLXJpZ2h0OiAwICFpbXBvcnRhbnQ7Cn0KCi5lbC1yYWRpby1idXR0b24gPj4+IC5lbC1yYWRpby1idXR0b25fX2lubmVyIHsKICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikgIWltcG9ydGFudDsKICBib3JkZXItcmFkaXVzOiAyNXB4ICFpbXBvcnRhbnQ7CiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpOwogIHBhZGRpbmc6IDhweCAyMHB4OwogIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7Cn0KCi8qIOmAieS4reeKtuaAgSAqLwouZWwtcmFkaW8tYnV0dG9uLmlzLWFjdGl2ZSA+Pj4gLmVsLXJhZGlvLWJ1dHRvbl9faW5uZXIgewogIGJhY2tncm91bmQ6ICMwMGZmODggIWltcG9ydGFudDsKICBib3JkZXItY29sb3I6ICMwMGZmODggIWltcG9ydGFudDsKICBjb2xvcjogIzAwMCAhaW1wb3J0YW50OwogIGJveC1zaGFkb3c6IDAgMnB4IDhweCByZ2JhKDAsIDI1NSwgMTM2LCAwLjMpICFpbXBvcnRhbnQ7CiAgZm9udC13ZWlnaHQ6IDYwMDsKfQoKLyog5oKs5YGc5pWI5p6cICovCi5lbC1yYWRpby1idXR0b246bm90KC5pcy1hY3RpdmUpOmhvdmVyID4+PiAuZWwtcmFkaW8tYnV0dG9uX19pbm5lciB7CiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDI1NSwgMTM2LCAwLjUpICFpbXBvcnRhbnQ7CiAgY29sb3I6ICMwMGZmODggIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["Movie.vue"],"names":[],"mappings":";AAoHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Movie.vue","sourceRoot":"src/views/movie","sourcesContent":["<!--构建一个电影相关页面，提供电影导航菜单、电影类别筛选和排序功能，并根据用户选择动态渲染相应的电影内容数据定义：在 data 函数中定义了 menuList\n（导航菜单项数据）、categoryRadio（当前选中的电影类别）、categoryList（电影类别列表）和 orderByColumn（当前的排序规则）等数据属性。\n生命周期钩子：在 created 钩子中调用 getCategoryList 方法，该方法通过 axios 发送 GET 请求从服务器获取电影类别列表数据，\n并将其存储在 categoryList 中。如果请求失败，会使用 this.$message.error 提示用户。\n路由监听：通过 watch 监听 $route 的变化，当路由发生变化时，将 categoryRadio 重置为 0（表示选择 “全部” 类别），\n将 orderByColumn 重置为 releaseDate（按时间排序）。-->\n<template>\n    <el-container>\n        <el-header>\n            <el-menu\n                :default-active=\"$route.path\"\n                class=\"nav-menu\"\n                mode=\"horizontal\"\n                :router=\"true\"\n                background-color=\"#545c64\"\n                text-color=\"#fff\"\n                active-text-color=\"#ffd04b\"\n            >\n                <el-menu-item\n                    :index=\"item.path\"\n                    v-for=\"item in menuList\"\n                    :key=\"item.id\"\n                >\n                    <i :class=\"['iconfont', item.icon]\"></i>\n                    <b style=\"font-size: 28px;padding:110px\"> {{ item.name }}</b>\n                </el-menu-item>\n            </el-menu>\n        </el-header>\n        <el-main>\n            <!-- 类别查询 -->\n            <div class=\"tags-container\">\n                <div class=\"tags-line\">\n                    <div class=\"tags-title\">\n                        <i class=\"iconfont icon-r-find\" style=\"font-size: 28px;\"></i><b style=\"font-size: 20px;\"> 类型</b>\n                    </div>\n                    <el-radio-group v-model=\"categoryRadio\">\n                        <el-radio-button :label=\"0\">全部</el-radio-button>\n                        <el-radio-button\n                            :label=\"item.movieCategoryId\"\n                            v-for=\"item in categoryList\"\n                            :key=\"item.movieCategoryId\"\n                            >{{ item.movieCategoryName }}</el-radio-button\n                        >\n                    </el-radio-group>\n                </div>\n            </div>\n\n            <!-- 按条件排序 -->\n            <div class=\"order-by-container\">\n                <el-radio v-model=\"orderByColumn\" label=\"releaseDate\"\n                    >按时间排序</el-radio\n                >\n                <!--        <el-radio v-model=\"orderByColumn\" label=\"movieScore\">按评价排序</el-radio>-->\n            </div>\n\n            <!--      <router-view :movieCategoryId=\"categoryRadio\" :movieAreaId=\"areaRadio\" :movieAgeId=\"ageRadio\" :orderByColumn=\"orderByColumn\"></router-view>-->\n            <router-view\n                :movieCategoryId=\"categoryRadio\"\n                :orderByColumn=\"orderByColumn\"\n            ></router-view>\n        </el-main>\n    </el-container>\n</template>\n\n<script>\nexport default {\n    name: \"Movie\",\n    data() {\n        return {\n          menuList: [\n            {\n              id: \"1\",\n              name: \"正在热映\",\n              path: \"/movie/movieOngoing\",\n              icon: \"icon-fire\" // iconfont 图标类名\n            },\n            {\n              id: \"2\",\n              name: \"即将上映\",\n              path: \"/movie/movieUpcoming\",\n              icon: \"icon-calendar\"\n            },\n            {\n              id: \"3\",\n              name: \"热播影片\",\n              path: \"/movie/movieClassics\",\n              icon: \"icon-star\"\n            }\n          ],\n            categoryRadio: 0,\n            categoryList: [],\n            orderByColumn: \"releaseDate\",\n        };\n    },\n    created() {\n        this.getCategoryList();\n    },\n    methods: {\n        async getCategoryList() {\n            const { data: res } = await axios.get(\"sysMovieCategory/find\");\n            if (res.code !== 200)\n                return this.$message.error(\"获取服务器信息失败\");\n            this.categoryList = res.data;\n        },\n    },\n    watch: {\n        $route() {\n            //页面发生变化时初始化类别选项\n            this.categoryRadio = 0;\n            this.orderByColumn = \"releaseDate\";\n        },\n    },\n};\n</script>\n\n<style >\n/* 移除容器间距 */\n.el-container {\n  overflow: hidden;\n}\n\n/* 消除header底部间距 */\n.el-header {\n  padding: 0 !important;\n  margin-bottom: -1px; /* 消除默认底部边框间隙 */\n}\n\n/* 消除main顶部间距 */\n.el-main {\n  padding: 0 !important;\n  margin-top: 0 !important;\n}\n.tags-container {\n  background: rgba(37, 37, 37, 0.62) !important;\n  border: 1px solid rgba(255, 255, 255, 0.1) !important;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\n  backdrop-filter: blur(8px);\n  margin: 0 0;\n}\n\n.tags-line {\n  padding: 18px 24px;\n  display: flex;\n  align-items: center;\n  border: none !important;\n}\n\n.tags-title {\n  width: auto !important;\n  float: none !important;\n  display: flex;\n  align-items: center;\n  margin-right: 30px;\n}\n\n.tags-title i {\n  color: #00ff88;\n  margin-right: 10px;\n}\n\n.tags-title b {\n  font-size: 18px !important;\n  color: rgba(255, 255, 255, 0.9);\n}\n\n/* 标签样式 */\n.el-radio-group {\n  width: auto !important;\n  margin-left: 0 !important;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n}\n\n.el-radio-button {\n  margin-right: 0 !important;\n}\n\n.el-radio-button >>> .el-radio-button__inner {\n  border: 1px solid rgba(255, 255, 255, 0.2) !important;\n  border-radius: 25px !important;\n  background: transparent !important;\n  color: rgba(255, 255, 255, 0.8);\n  padding: 8px 20px;\n  transition: all 0.3s ease;\n}\n\n/* 选中状态 */\n.el-radio-button.is-active >>> .el-radio-button__inner {\n  background: #00ff88 !important;\n  border-color: #00ff88 !important;\n  color: #000 !important;\n  box-shadow: 0 2px 8px rgba(0, 255, 136, 0.3) !important;\n  font-weight: 600;\n}\n\n/* 悬停效果 */\n.el-radio-button:not(.is-active):hover >>> .el-radio-button__inner {\n  border-color: rgba(0, 255, 136, 0.5) !important;\n  color: #00ff88 !important;\n}\n</style>\n"]}]}
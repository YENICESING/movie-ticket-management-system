{"remainingRequest":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\whisper\\cinema\\CinemaManagerAdminVue\\src\\views\\movie\\MovieCategory.vue?vue&type=style&index=0&id=730b31e5&scoped=true&lang=css","dependencies":[{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\src\\views\\movie\\MovieCategory.vue","mtime":1741601135936},{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\whisper\\cinema\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOWFqOWxgOWNoeeJh+agt+W8j+WinuW8uiAqLwouYm94LWNhcmQgewogIG1hcmdpbjogMjBweDsKICBib3JkZXItcmFkaXVzOiAxMnB4OwogIGJveC1zaGFkb3c6IDAgNHB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjA4KTsKICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuM3MgZWFzZTsKfQoKLmJveC1jYXJkOmhvdmVyIHsKICBib3gtc2hhZG93OiAwIDZweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4xMik7Cn0KCi8qIOaTjeS9nOaMiemSrue7hOagt+W8jyAqLwouZWwtcm93IHsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgouZWwtYnV0dG9uIHsKICBmb250LXNpemU6IDE0cHg7CiAgcGFkZGluZzogMTBweCAyMHB4OwogIGJvcmRlci1yYWRpdXM6IDZweDsKICB0cmFuc2l0aW9uOiBhbGwgMC4yczsKfQoKLmVsLWJ1dHRvbi0tcHJpbWFyeSB7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzQwOWVmZiwgIzI5NzlmZik7CiAgYm9yZGVyOiBub25lOwp9CgouZWwtYnV0dG9uLS1kYW5nZXIgewogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICNmZjRkNGYsICNmNTIyMmQpOwogIGJvcmRlcjogbm9uZTsKfQoKLyog6KGo5qC85qC35byP5LyY5YyWICovCi5lbC10YWJsZSB7CiAgbWFyZ2luOiAyMHB4IDA7CiAgLS1lbC10YWJsZS1oZWFkZXItYmctY29sb3I6ICNmOGY5ZmE7CiAgLS1lbC10YWJsZS1yb3ctaG92ZXItYmctY29sb3I6ICNmOGY5ZmE7Cn0KCi5lbC10YWJsZV9fYm9keSB0ZCB7CiAgcGFkZGluZzogMTJweCAwOwp9CgovKiDliIbpobXnu4Tku7bntKflh5HljJYgKi8KLmVsLXBhZ2luYXRpb24gewogIG1hcmdpbi10b3A6IDIwcHg7CiAgcGFkZGluZzogMTJweCAxNnB4OwogIGJhY2tncm91bmQ6ICNmZmY7CiAgYm9yZGVyLXJhZGl1czogOHB4Owp9CgovKiDlr7nor53moYbooajljZXnu5/kuIDpl7Tot50gKi8KLmVsLWRpYWxvZ19fYm9keSB7CiAgcGFkZGluZzogMjBweCAzMHB4Owp9CgouZWwtZm9ybS1pdGVtIHsKICBtYXJnaW4tYm90dG9tOiAyMnB4Owp9CgovKiDooajljZXmoIfnrb7nu5/kuIDlrr3luqYgKi8KLmVsLWZvcm0taXRlbV9fbGFiZWwgewogIHdpZHRoOiAxMjBweCAhaW1wb3J0YW50OwogIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7Cn0KCi8qIOaTjeS9nOWIl+aMiemSrumXtOi3nSAqLwouZWwtdGFibGUtY29sdW1uLS1maXhlZC1yaWdodCAuY2VsbCB7CiAgZGlzcGxheTogZmxleDsKICBnYXA6IDhweDsKfQoKLyog5ZON5bqU5byP5aSE55CGICovCkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkgewogIC5lbC1jb2wgewogICAgd2lkdGg6IDEwMCU7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIH0KCiAgLmVsLXRhYmxlLWNvbHVtbi0tZml4ZWQtcmlnaHQgLmNlbGwgewogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICB9CgogIC5lbC1idXR0b24gewogICAgd2lkdGg6IDEwMCU7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIH0KfQoKLyog5bel5YW35o+Q56S65qC35byP5LyY5YyWICovCi5lbC10b29sdGlwIHsKICBtYXJnaW46IDAgNXB4Owp9CgovKiDlr7nor53moYbmjInpkq7nu5/kuIDpo47moLwgKi8KLmRpYWxvZy1mb290ZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKICBnYXA6IDE1cHg7Cn0KCi8qIOi+k+WFpeahhueOsOS7o+agt+W8jyAqLwouZWwtaW5wdXQgewogIGJvcmRlci1yYWRpdXM6IDZweDsKfQoKLyog5Yig6Zmk56Gu6K6k5a+56K+d5qGG5qC35byPICovCi5lbC1tZXNzYWdlLWJveCB7CiAgYm9yZGVyLXJhZGl1czogMTJweDsKfQoKLyog5om56YeP5pON5L2c5oyJ6ZKu57uEICovCi5iYXRjaC1hY3Rpb25zIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZ2FwOiAxNXB4Owp9CgovKiDooajmoLzmk43kvZzmjInpkq7ntKflh5HluIPlsYAgKi8KLnRhYmxlLWFjdGlvbnMgewogIGRpc3BsYXk6IGZsZXg7CiAgZ2FwOiA4cHg7CiAgZmxleC13cmFwOiB3cmFwOwp9CgovKiDliIbpobXnu4Tku7bnjrDku6PmoLflvI8gKi8KLmVsLXBhZ2luYXRpb24uaXMtYmFja2dyb3VuZCAuYnRuLW5leHQsCi5lbC1wYWdpbmF0aW9uLmlzLWJhY2tncm91bmQgLmJ0bi1wcmV2LAouZWwtcGFnaW5hdGlvbi5pcy1iYWNrZ3JvdW5kIC5lbC1wYWdlciBsaSB7CiAgYm9yZGVyLXJhZGl1czogNnB4OwogIG1hcmdpbjogMCA0cHg7Cn0KCi8qIOWvueivneahhuagh+mimOagt+W8jyAqLwouZWwtZGlhbG9nX190aXRsZSB7CiAgZm9udC13ZWlnaHQ6IDYwMDsKICBjb2xvcjogIzMwMzEzMzsKfQoKLyog6KGo5Y2V6L6T5YWl5qGG6IGa54Sm5pWI5p6cICovCi5lbC1pbnB1dF9faW5uZXI6Zm9jdXMgewogIGJvcmRlci1jb2xvcjogIzQwOWVmZjsKICBib3gtc2hhZG93OiAwIDAgMCAycHggcmdiYSg2NCwgMTU4LCAyNTUsIDAuMik7Cn0KCi8qIOihqOagvOaWkemprOe6ueagt+W8jyAqLwouZWwtdGFibGUtLXN0cmlwZWQgLmVsLXRhYmxlX19ib2R5IHRyLmVsLXRhYmxlX19yb3ctLXN0cmlwZWQgdGQgewogIGJhY2tncm91bmQ6ICNmYWZhZmE7Cn0KCi8qIOaTjeS9nOaMiemSrmhvdmVy5pWI5p6cICovCi5lbC1idXR0b246bm90KC5pcy1kaXNhYmxlZCk6aG92ZXIgewogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTsKICBib3gtc2hhZG93OiAwIDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEyKTsKfQo="},{"version":3,"sources":["MovieCategory.vue"],"names":[],"mappings":";AAsfile":"MovieCategory.vue","sourceRoot":"src/views/movie","sourcesContent":["<!--getMovieCategoryList：发送 GET 请求获取电影类别列表数据，并更新页面显示。\nhandleSizeChange 和 handleCurrentChange：处理分页组件的每页显示记录数和页码变化事件，重新获取数据。\naddMovieCategory：验证添加表单数据，若验证通过则发送 POST 请求添加新的电影类别，添加成功后隐藏对话框并刷新列表。\nshowEditDialog：根据传入的类别 ID 发送 GET 请求获取类别详细信息，填充到修改表单中并显示修改对话框。\neditMovieCategoryInfo：验证修改表单数据，若验证通过则发送 PUT 请求更新电影类别信息，更新成功后隐藏对话框并刷新列表。\nhandleSelectionChange：监听表格中多选框的变化，更新 multipleSelection 数组。\nmultipleDelete：询问用户是否确认批量删除，若确认则发送 DELETE 请求删除选中的类别，删除成功后刷新列表。\ndeleteMovieCategoryById：询问用户是否确认删除单个类别，若确认则发送 DELETE 请求删除该类别，删除成功后刷新列表。-->\n<template>\n<div>\n <!--面包屑导航类别-->\n    <div class=\"board\">\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item>电影管理</el-breadcrumb-item>\n        <el-breadcrumb-item>电影类别</el-breadcrumb-item>\n      </el-breadcrumb>\n    </div>\n\n\n    <!--卡片视图-->\n    <el-card class=\"box-card\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"20\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\" style=\"font-size: 18px;\">\n             添加类别\n          </el-button>\n          <el-button type=\"danger\" @click=\"multipleDelete\" style=\"font-size: 18px;\">\n             批量删除类别\n          </el-button>\n        </el-col>\n      </el-row>\n\n      <!--类别分类列表-->\n      <el-table :data=\"movieCategoryList\" border stripe @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n        <el-table-column prop=\"movieCategoryId\" label=\"类别编号\" width=\"145\"></el-table-column>\n        <el-table-column prop=\"movieCategoryName\" label=\"电影类别\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"260\" fixed=\"right\">\n          <template slot-scope=\"scope\">\n            <el-tooltip effect=\"dark\" content=\"修改电影类别\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n              <el-button type=\"primary\" @click=\"showEditDialog(scope.row.movieCategoryId)\"  style=\"font-size: 18px;\">\n                 编辑\n              </el-button>\n            </el-tooltip>\n            <el-tooltip effect=\"dark\" content=\"删除类别\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n              <el-button type=\"danger\" @click=\"deleteMovieCategoryById(scope.row.movieCategoryId)\"  style=\"font-size: 18px;\">\n                 删除\n              </el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!--分页类别-->\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"queryInfo.pageNum\"\n          :page-sizes=\"[5, 7, 9]\"\n          :page-size=\"queryInfo.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n      </el-pagination>\n    </el-card>\n\n    <!--添加类别对话框-->\n    <el-dialog title=\"添加类别\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\n      <!--内容主题区-->\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n        <!--prop：在addFormRules中定义校验规则， v-model：双向绑定数据-->\n        <el-form-item label=\"电影类别\" prop=\"movieCategoryName\">\n          <el-input v-model=\"addForm.movieCategoryName\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!--底部区域-->\n      <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"addDialogVisible = false\" style=\"font-size: 18px;\">  取 消</el-button>\n      <el-button type=\"primary\" @click=\"addMovieCategory\" style=\"font-size: 18px;\">  确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!--修改类别对话框-->\n    <el-dialog title=\"修改类别\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\n        <el-form-item label=\"类别编号\">\n          <el-input v-model=\"editForm.movieCategoryId\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"电影类别\" prop=\"movieCategoryName\">\n          <el-input v-model=\"editForm.movieCategoryName\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\" style=\"font-size: 18px;\">  取 消</el-button>\n        <el-button type=\"primary\" @click=\"editMovieCategoryInfo\" style=\"font-size: 18px;\">  确 定</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n\n</template>\n\n<script>\nexport default {\n  name: \"MovieCategory\",\n  // this.$message和this.$confirm都属于原型挂载, 在element.js中配置\n  // Vue.prototype.$message = Message\n  // Vue.prototype.$confirm = MessageBox.confirm\n  data() {\n    return {\n      queryInfo: {\n        query: '',\n        pageNum: 1,\n        pageSize: 7\n      },\n      movieCategoryList: [],\n      total: 0,\n      //控制对话框的显示与隐藏\n      addDialogVisible: false,\n      //添加类别的表单数据\n      addForm: {\n        movieCategoryName: ''\n      },\n      //验证表单规则对象\n      addFormRules: {\n        movieCategoryName: [\n          { required: true, message: '请输入电影类别', trigger: 'blur' }\n        ]\n      },\n      editDialogVisible: false,\n      editForm: {},\n      editFormRules: {\n        movieCategoryName: [\n          { required: true, message: '请输入电影类别', trigger: 'blur' }\n        ]\n      },\n      multipleSelection: []\n    }\n  },\n  created() {\n    this.getMovieCategoryList()\n  },\n  methods: {\n    getMovieCategoryList() {\n      const _this = this;\n      axios.get('sysMovieCategory/find', {params: _this.queryInfo}).then(resp => {\n        console.log(resp)\n        _this.movieCategoryList = resp.data.data;\n        _this.total = resp.data.total;\n        _this.queryInfo.pageSize = resp.data.pageSize;\n        _this.queryInfo.pageNum = resp.data.pageNum;\n      })\n    },\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize\n      this.getMovieCategoryList()\n      console.log(newSize)\n    },\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage\n      this.getMovieCategoryList()\n      console.log(newPage)\n    },\n    // 监听添加对话框的关闭事件\n    addDialogClosed(){\n      this.$refs.addFormRef.resetFields()\n    },\n    // 监听添加按钮\n    addMovieCategory(){\n      const _this = this;\n      this.$refs.addFormRef.validate(async valid => {\n        console.log(valid)\n        if (!valid) return\n        //预校验成功，发网络请求\n        axios.defaults.headers.post['Content-Type'] = 'application/json'\n        await axios.post('sysMovieCategory', JSON.stringify(_this.addForm)).then(resp => {\n          console.log(resp)\n          if (resp.data.code !== 200){\n            this.$message.error('添加电影类别失败！')\n          }\n        })\n        //隐藏添加对话框\n        this.addDialogVisible = false\n        //重新加载列表\n        this.getMovieCategoryList()\n        this.$message.success('添加电影类别成功！')\n      })\n    },\n    // 显示修改对话框，回显数据\n    showEditDialog(id){\n      const _this = this\n      axios.get('sysMovieCategory/' + id ).then(resp => {\n        console.log(resp)\n        _this.editForm = resp.data.data\n      })\n      this.editDialogVisible = true\n    },\n    // 监听修改对话框的关闭事件\n    editDialogClosed(){\n      this.$refs.editFormRef.resetFields()\n    },\n    // 修改类别分类信息并提交\n    editMovieCategoryInfo(){\n      this.$refs.editFormRef.validate(async valid => {\n        const _this = this\n        if (!valid) return\n        axios.defaults.headers.put['Content-Type'] = 'application/json'\n        await axios.put('sysMovieCategory', JSON.stringify(_this.editForm)).then(resp => {\n          if (resp.data.code !== 200){\n            this.$message.error('修改电影类别失败！')\n          }\n        })\n        this.editDialogVisible = false\n        this.getMovieCategoryList()\n        this.$message.success('修改电影类别成功！')\n      })\n    },\n    // 监听多选框变化\n    handleSelectionChange(val){\n      this.multipleSelection = val\n    },\n    async multipleDelete(){\n      const _this = this\n      //询问用户是否确认删除\n      const resp = await this.$confirm('此操作将永久删除这些条目, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      // 用户确认删除, resp为字符串\"confirm\"\n      // 用户取消删除，resp为字符串\"cancel\"\n      if (resp === 'cancel'){\n        return _this.$message.info('已取消删除')\n      }\n\n      let ids = []\n      this.multipleSelection.forEach(data => {\n        ids.push(data.movieCategoryId)\n      })\n      await axios.delete('sysMovieCategory/' + ids).then(resp => {\n        if (resp.data.code !== 200){\n          this.$message.success('批量删除电影类别失败！')\n        }\n      })\n      this.getMovieCategoryList()\n      this.$message.success('批量删除电影类别成功！')\n    },\n    //根据id删除对应的类别分类\n    async deleteMovieCategoryById(id){\n      const _this = this\n      //询问用户是否确认删除\n      const resp = await this.$confirm('此操作将永久删除该条目, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      // 用户确认删除, resp为字符串\"confirm\"\n      // 用户取消删除，resp为字符串\"cancel\"\n      console.log(resp)\n      if (resp === 'cancel'){\n        return _this.$message.info('已取消删除')\n      }\n\n      await axios.delete('sysMovieCategory/' + id).then(resp => {\n        if (resp.data.code !== 200){\n          _this.$message.success('删除电影类别失败！')\n        }\n      })\n      this.getMovieCategoryList()\n      this.$message.success('删除电影类别成功！')\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 全局卡片样式增强 */\n.box-card {\n  margin: 20px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  transition: box-shadow 0.3s ease;\n}\n\n.box-card:hover {\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);\n}\n\n/* 操作按钮组样式 */\n.el-row {\n  margin-bottom: 20px;\n}\n\n.el-button {\n  font-size: 14px;\n  padding: 10px 20px;\n  border-radius: 6px;\n  transition: all 0.2s;\n}\n\n.el-button--primary {\n  background: linear-gradient(135deg, #409eff, #2979ff);\n  border: none;\n}\n\n.el-button--danger {\n  background: linear-gradient(135deg, #ff4d4f, #f5222d);\n  border: none;\n}\n\n/* 表格样式优化 */\n.el-table {\n  margin: 20px 0;\n  --el-table-header-bg-color: #f8f9fa;\n  --el-table-row-hover-bg-color: #f8f9fa;\n}\n\n.el-table__body td {\n  padding: 12px 0;\n}\n\n/* 分页组件紧凑化 */\n.el-pagination {\n  margin-top: 20px;\n  padding: 12px 16px;\n  background: #fff;\n  border-radius: 8px;\n}\n\n/* 对话框表单统一间距 */\n.el-dialog__body {\n  padding: 20px 30px;\n}\n\n.el-form-item {\n  margin-bottom: 22px;\n}\n\n/* 表单标签统一宽度 */\n.el-form-item__label {\n  width: 120px !important;\n  justify-content: flex-end;\n}\n\n/* 操作列按钮间距 */\n.el-table-column--fixed-right .cell {\n  display: flex;\n  gap: 8px;\n}\n\n/* 响应式处理 */\n@media (max-width: 768px) {\n  .el-col {\n    width: 100%;\n    margin-bottom: 10px;\n  }\n\n  .el-table-column--fixed-right .cell {\n    flex-direction: column;\n  }\n\n  .el-button {\n    width: 100%;\n    margin-bottom: 10px;\n  }\n}\n\n/* 工具提示样式优化 */\n.el-tooltip {\n  margin: 0 5px;\n}\n\n/* 对话框按钮统一风格 */\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 15px;\n}\n\n/* 输入框现代样式 */\n.el-input {\n  border-radius: 6px;\n}\n\n/* 删除确认对话框样式 */\n.el-message-box {\n  border-radius: 12px;\n}\n\n/* 批量操作按钮组 */\n.batch-actions {\n  margin-bottom: 20px;\n  display: flex;\n  gap: 15px;\n}\n\n/* 表格操作按钮紧凑布局 */\n.table-actions {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n/* 分页组件现代样式 */\n.el-pagination.is-background .btn-next,\n.el-pagination.is-background .btn-prev,\n.el-pagination.is-background .el-pager li {\n  border-radius: 6px;\n  margin: 0 4px;\n}\n\n/* 对话框标题样式 */\n.el-dialog__title {\n  font-weight: 600;\n  color: #303133;\n}\n\n/* 表单输入框聚焦效果 */\n.el-input__inner:focus {\n  border-color: #409eff;\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.2);\n}\n\n/* 表格斑马纹样式 */\n.el-table--striped .el-table__body tr.el-table__row--striped td {\n  background: #fafafa;\n}\n\n/* 操作按钮hover效果 */\n.el-button:not(.is-disabled):hover {\n  transform: translateY(-1px);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);\n}\n</style>\n"]}]}